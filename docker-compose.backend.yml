services:
  # Spring Boot API 서버
  spring-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spring-backend
    ports:
      - "6030:6030"
    env_file:
      - ./.env.backend
    volumes:
      # 업로드된 이미지 공유 (Frontend와 공유)
      - uploaded-images:/app/uploaded-images
      # 로그 파일 저장
      - ./backend/logs:/app/logs
    networks:
      - backend-network
    depends_on:
      - chatbot-api
    restart: unless-stopped

  # FastAPI 챗봇 API 서버
  chatbot-api:
    build:
      context: ./chatbot-api
      dockerfile: Dockerfile
    container_name: chatbot-api
    ports:
      - "8001:8001"
    env_file:
      - ./.env.backend
    volumes:
      # 로그 파일 저장
      - ./chatbot-api/logs:/app/logs
    networks:
      - backend-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Node.js 실시간 채팅 서버
  node-chat-backend:
    build:
      context: ./node-backend
      dockerfile: Dockerfile
    container_name: node-chat-backend
    ports:
      - "4000:4000"
    env_file:
      - ./.env.backend
    volumes:
      # 로그 파일 저장
      - ./node-backend/logs:/app/logs
    networks:
      - backend-network
    restart: unless-stopped
    environment:
      - NODE_ENV=production

volumes:
  # 업로드된 이미지 볼륨 (Frontend와 공유)
  uploaded-images:
    driver: local

networks:
  backend-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
