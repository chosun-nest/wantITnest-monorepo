# 빌드 분리 방식 - React 빌드 + Nginx 서빙

services:
  nest-ai:
    container_name: nest-ai-crawler-8000-container
    build:
      context: ./ai
      dockerfile: Dockerfile
    env_file:
      - ./.env
    depends_on:
      - nest-be
    restart: unless-stopped
    networks:
      - nest-network
    # 포트 노출 제거 - nginx를 통해서만 접근

  nest-be:
    container_name: nest-be-spring-boot-6030-container
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    volumes:
      - uploaded-images:/app/uploaded-images
    restart: unless-stopped
    networks:
      - nest-network
    # 포트 노출 제거 - nginx를 통해서만 접근

  nest-fe:
    container_name: nest-fe-react-build-container
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    env_file:
      - ./.env
    volumes:
      - react-build:/app/dist
    restart: "no"  # 빌드 완료 후 종료
    networks:
      - nest-network

  nginx:
    container_name: nest-nginx-80-container
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - react-build:/usr/share/nginx/html:ro
      - uploaded-images:/usr/share/nginx/uploaded-images:ro
    depends_on:
      - nest-be
      - nest-fe
      - nest-ai
    restart: unless-stopped
    networks:
      - nest-network

volumes:
  react-build:
    driver: local
  uploaded-images:
    driver: local

networks:
  nest-network:
    driver: bridge
